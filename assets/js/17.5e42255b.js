(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{529:function(t,i,l){"use strict";l.r(i);var r=l(2),s=Object(r.a)({},(function(){var t=this,i=t.$createElement,l=t._self._c||i;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h2",{attrs:{id:"git上传步骤如下"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#git上传步骤如下"}},[t._v("#")]),t._v(" GIT上传步骤如下：")]),t._v(" "),l("ul",[l("li",[t._v("push：是推代码，将你的代码上传到远程的动作")])]),t._v(" "),l("p",[t._v("完整的流程是：")]),t._v(" "),l("p",[t._v("第一种方法：（简单易懂）")]),t._v(" "),l("ul",[l("li")]),t._v(" "),l("ol",[l("li",[t._v("git add -A（后面有一个点，意思是将你本地所有修改了的文件添加到暂存区-A）")])]),t._v(" "),l("ul",[l("li")]),t._v(" "),l("ol",{attrs:{start:"2"}},[l("li",[t._v('git commit -m "本次提交！！！！模块" (引号里面是你的介绍，就是你的这次的提交是什么内容，便于你以后查看，这个是将索引的当前内容与描述更改的用户和日志消息一起存储在新的提交中)')])]),t._v(" "),l("p",[t._v("~~ 3. git pull origin 远程分支名")]),t._v(" "),l("p",[t._v("//下载分支代码\ngit pull origin poo")]),t._v(" "),l("p",[t._v("这是下拉代码，将远程最新的代码先跟你本地的代码合并一下，如果确定远程没有更新，可以不用这个，最好是每次都执行以下，完成之后打开代码查看有没有冲突，并解决，如果有冲突解决完成以后再次执行1跟2的操作~~")]),t._v(" "),l("ol",{attrs:{start:"4"}},[l("li",[t._v("git push origin main（git push origin 本地分支名:refs/remotes/远程分支名） 将代码推至远程就可以了")])])])}),[],!1,null,null,null);i.default=s.exports}}]);